{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(swift build)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(/usr/bin/afplay:*)",
      "Bash(swift test:*)",
      "Bash(swift build:*)",
      "Bash(./.build/release/velo:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(./velo install:*)",
      "Bash(./.build/arm64-apple-macosx/release/velo install:*)",
      "Bash(/Users/dmitry/Developer/velo/.build/arm64-apple-macosx/release/velo install wget)",
      "Bash(/Users/dmitry/Developer/velo/.build/arm64-apple-macosx/release/velo --verbose install wget)",
      "Bash(/Users/dmitry/Developer/velo/.build/arm64-apple-macosx/release/velo doctor)",
      "Bash(/Users/dmitry/Developer/velo/.build/arm64-apple-macosx/release/velo list)",
      "Bash(/Users/dmitry/Developer/velo/.build/arm64-apple-macosx/release/velo)",
      "Bash(/Users/dmitry/Developer/velo/.build/arm64-apple-macosx/release/velo help install)",
      "Bash(/Users/dmitry/Developer/velo/.build/arm64-apple-macosx/release/velo search test)",
      "Bash(chmod:*)",
      "Bash(./debug_cli.sh:*)",
      "Bash(/Users/dmitry/Developer/velo/debug_cli.sh:*)",
      "Bash(/Users/dmitry/Developer/velo/test_all_commands.sh)",
      "Bash(swift run:*)",
      "Bash(swift:*)",
      "mcp__ide__executeCode",
      "Bash(timeout:*)",
      "Bash(# Use test fixtures instead of full tap to debug wget parsing\nmkdir -p Tests/Fixtures/Formulae\ncp ~/.velo/taps/homebrew/core/Formula/w/wget.rb Tests/Fixtures/Formulae/)",
      "Bash(gtimeout:*)",
      "Bash(# Create a minimal test with just wget in test fixtures\nmkdir -p Tests/Fixtures/Formulae\necho 'class Wget < Formula\n  desc \"Internet file retriever\"\n  homepage \"https://www.gnu.org/software/wget/\"\n  url \"https://ftp.gnu.org/gnu/wget/wget-1.25.0.tar.gz\"\n  sha256 \"766e48423e79359ea31e41db9e5c289675947a7fcf2efdcedb726ac9d0da3784\"\n  \n  bottle do\n    sha256 arm64_sonoma: \"4d180cd4ead91a34e2c2672189fc366b87ae86e6caa3acbf4845b272f57c859a\"\n    sha256 arm64_ventura: \"7fce09705a52a2aff61c4bdd81b9d2a1a110539718ded2ad45562254ef0f5c22\"\n  end\nend' > Tests/Fixtures/Formulae/wget.rb)",
      "Bash(pkill:*)",
      "Bash(# Check if any cache files were created during the parsing\nfind ~/.velo -name \"*.velocache\" 2>/dev/null | head -5)",
      "Bash(# Check the cache directory structure\nls -la ~/.velo/ 2>/dev/null || echo \"No .velo directory yet\")",
      "Bash(# Check if there's a log directory\nls -la ~/.velo/logs/ 2>/dev/null || echo \"No logs directory\")",
      "Bash(# Clean up any existing directories first\nrm -rf ~/.velo/cache ~/.velo/Cellar ~/.velo/bin ~/.velo/logs ~/.velo/tmp 2>/dev/null || true)",
      "Bash(# Skip the git pull by running with the tap in detached HEAD state\ncd ~/.velo/taps/homebrew/core && git log --oneline -1)",
      "Bash(# Run with explicit timeout and capture stderr\n( ./.build/arm64-apple-macosx/release/velo install wget 2>&1 ) &\nPID=$!\nsleep 10\nif ps -p $PID > /dev/null; then\n    echo \"Process still running after 10 seconds, killing...\"\n    kill $PID 2>/dev/null\nfi\nwait $PID 2>/dev/null || true)",
      "Bash(curl:*)",
      "Bash(# Test the full GHCR authentication flow\necho \"1. Getting auth realm...\"\nAUTH_HEADER=$(curl -sI \"https://ghcr.io/v2/homebrew/core/wget/blobs/sha256:4d180cd4ead91a34e2c2672189fc366b87ae86e6caa3acbf4845b272f57c859a\" | grep -i www-authenticate)\necho \"$AUTH_HEADER\"\n\necho -e \"\\n2. Extracting token endpoint...\"\nREALM=$(echo \"$AUTH_HEADER\" | grep -o 'realm=\"[^\"]*\"' | sed 's/realm=\"//;s/\"//')\nSCOPE=$(echo \"$AUTH_HEADER\" | grep -o 'scope=\"[^\"]*\"' | sed 's/scope=\"//;s/\"//')\necho \"Realm: $REALM\"\necho \"Scope: $SCOPE\")",
      "Bash(ln:*)",
      "Bash(~/.velo/bin/wget:*)"
    ],
    "deny": []
  }
}