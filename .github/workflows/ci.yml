name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14] # Intel and Apple Silicon
        swift: ["5.9", "5.10"]
        
    name: Test (Swift ${{ matrix.swift }}, ${{ matrix.os }})
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: ${{ matrix.swift }}
    
    - name: Swift Version
      run: swift --version
      
    - name: System Info
      run: |
        echo "=== System Information ==="
        uname -a
        sysctl hw.model
        sysctl machdep.cpu.brand_string || echo "CPU info not available"
        echo "=== Disk Space ==="
        df -h
        echo "=== Memory ==="
        vm_stat
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Cache Homebrew Taps
      uses: actions/cache@v3
      with:
        path: ~/.velo/taps
        key: velo-taps-${{ github.run_id }}
        restore-keys: |
          velo-taps-
    
    - name: Resolve Dependencies
      run: swift package resolve
      
    - name: Build Debug
      run: swift build --configuration debug
      
    - name: Build Release
      run: swift build --configuration release
      
    - name: Run Unit Tests
      run: swift test --parallel
      
    - name: Run Integration Tests with Coverage
      run: |
        swift test \
          --enable-code-coverage \
          --filter VeloIntegrationTests \
          --parallel
      
    - name: Generate Coverage Report
      if: matrix.os == 'macos-14' && matrix.swift == '5.9'
      run: |
        xcrun llvm-cov export \
          .build/debug/veloPackageTests.xctest/Contents/MacOS/veloPackageTests \
          -instr-profile .build/debug/codecov/default.profdata \
          -format="lcov" > coverage.lcov
          
    - name: Upload Coverage
      if: matrix.os == 'macos-14' && matrix.swift == '5.9'
      uses: codecov/codecov-action@v3
      with:
        file: coverage.lcov
        fail_ci_if_error: false

  cli-integration-tests:
    runs-on: macos-14 # Use Apple Silicon for realistic testing
    name: CLI Integration Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: "5.9"
    
    - name: Build Velo
      run: swift build --configuration release
      
    - name: Setup Test Environment
      run: |
        # Create test directories
        mkdir -p ~/.velo/{bin,Cellar,cache,taps,logs,tmp}
        
        # Add velo to PATH
        ln -sf $(pwd)/.build/release/velo ~/.velo/bin/velo
        echo "$HOME/.velo/bin" >> $GITHUB_PATH
        
        # Verify installation
        ~/.velo/bin/velo --version || echo "Velo not ready yet"
    
    - name: Test Basic Commands
      run: |
        echo "=== Testing velo doctor ==="
        velo doctor || echo "Doctor found issues (expected in CI)"
        
        echo "=== Testing velo search ==="
        velo search wget | head -10
        
        echo "=== Testing velo info ==="
        velo info wget || echo "Info command test"
        
        echo "=== Testing velo list ==="
        velo list || echo "List test (empty expected)"
    
    - name: Test Package@Version Syntax
      run: |
        echo "=== Testing package@version parsing ==="
        velo info wget@1.25.0 || echo "Package@version syntax test"
        velo info openssl@3 || echo "Simple version test"  
        velo info python@3.11 || echo "Complex version test"
    
    - name: Test Search Performance
      run: |
        echo "=== Testing search performance ==="
        time velo search ".*" --descriptions | wc -l || echo "Search performance test"
    
    - name: Test Error Handling
      run: |
        echo "=== Testing error scenarios ==="
        velo info definitely-does-not-exist && exit 1 || echo "✓ Handles missing packages"
        velo search "" && exit 1 || echo "✓ Handles empty search"
    
    - name: Test Project Context
      run: |
        echo "=== Testing project context ==="
        mkdir -p test-project
        cd test-project
        echo '{"dependencies": {"wget": "1.25.0"}}' > velo.json
        velo doctor | grep -E "(project context|velo\.json)" || echo "Project context test"

  performance-benchmarks:
    runs-on: macos-14
    name: Performance Benchmarks
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: "5.9"
    
    - name: Run Performance Tests
      run: |
        swift test \
          --filter PerformanceBenchmarks \
          --parallel
          
    - name: Parse Benchmark Results
      run: |
        echo "=== Performance Test Results ==="
        echo "Check test output above for performance metrics"
        echo "Key metrics to monitor:"
        echo "- Formula parsing: < 100ms for complex formulas"
        echo "- Search index build: < 5s for full homebrew/core"
        echo "- Memory usage: < 100MB for normal operations"

  build-artifacts:
    runs-on: macos-14
    name: Build Release Artifacts
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: "5.9"
    
    - name: Build Release Binary
      run: |
        swift build \
          --configuration release \
          --arch arm64
    
    - name: Create Distribution
      run: |
        mkdir -p dist
        cp .build/release/velo dist/
        strip dist/velo
        
        # Verify binary
        file dist/velo
        dist/velo --version
        
        # Create tarball
        tar -czf dist/velo-macos-arm64.tar.gz -C dist velo
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: velo-macos-arm64
        path: dist/velo-macos-arm64.tar.gz
        retention-days: 30